{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/Transaction/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/Transaction/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","styles","profile","description","src","alt","text","states","states_list","quantity","defaultProps","Statistics","title","randomIntegerFromInterval","min","max","Math","floor","random","statistics","statList","map","id","label","percentage","item","style","backgroundColor","FriendListItem","isOnline","isOffline","width","FriendList","friends","friend","TransactionHistory","items","transactionHistory","table","type","amount","currency","App","userInfo","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2086c085.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Profile_link__1q9_C\",\"list\":\"Profile_list__3NwaH\",\"profile\":\"Profile_profile__1MyHE\",\"description\":\"Profile_description__2CX3Y\",\"avatar\":\"Profile_avatar__aMWhA\",\"name\":\"Profile_name__1t7uu\",\"text\":\"Profile_text__3TpNy\",\"tag\":\"Profile_tag__246g2\",\"location\":\"Profile_location__1DUYh\",\"states\":\"Profile_states__3Vzyc\",\"states_list\":\"Profile_states_list__tj3GL\",\"quantity\":\"Profile_quantity__3xO3o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"FriendList_link__1hzVC\",\"list\":\"FriendList_list__Zlp_N\",\"status\":\"FriendList_status__2anFY\",\"avatar\":\"FriendList_avatar__2GLMt\",\"name\":\"FriendList_name__2kEbm\",\"item\":\"FriendList_item__2WQlO\",\"friends\":\"FriendList_friends__2MczK\",\"isOffline\":\"FriendList_isOffline__1--wF\",\"isOnline\":\"FriendList_isOnline__3X4TB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Statistics_link__GhDIC\",\"list\":\"Statistics_list__Vrlui\",\"title\":\"Statistics_title__1uQV0\",\"statList\":\"Statistics_statList__29mxW\",\"item\":\"Statistics_item__1peLd\",\"label\":\"Statistics_label__1KeBQ\",\"percentage\":\"Statistics_percentage__IK01C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"TransactionHistory_link__1v7I_\",\"list\":\"TransactionHistory_list__3k-UM\",\"transactionHistory\":\"TransactionHistory_transactionHistory__3dtm7\",\"table\":\"TransactionHistory_table__17wQL\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nfunction Profile({name, tag, location, avatar, stats: {followers, views, likes}}) {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img className={styles.avatar} src={avatar} alt=\"Аватар пользователя\" />\n        <p className={styles.text}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.states}>\n        <li className={styles.states_list}>\n          <span className=\"label\">Followers</span>\n          <span className={styles.quantity}>{followers}</span>\n        </li>\n        <li className={styles.states_list}>\n          <span className=\"label\">Views</span>\n          <span className={styles.quantity}>{views}</span>\n        </li>\n        <li className={styles.states_list}>\n          <span className=\"label\">Likes</span>\n          <span className={styles.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    stats: PropTypes.shape({followers: PropTypes.number.isRequired, views: PropTypes.number.isRequired, likes: PropTypes.number.isRequired })\n    \n\n}\n\nProfile.defaultProps = {\n    avatar: 'https://c0.klipartz.com/pngpicture/543/4/gratis-png-iconos-de-computadora-mujer-avatar-thumbnail.png',\n}\n\n\nexport default Profile;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction Statistics({ title, stats }) {\n    //функция для рандомного цвета\n    const randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n    };\n    const randomColor = () => {\n        return `rgb(${randomIntegerFromInterval(0, 255)}, ${randomIntegerFromInterval(0, 255)}, ${randomIntegerFromInterval(0, 255)})`\n    };\n\n    return (\n        <section className={styles.statistics}>\n            {title && <h2 className={styles.title}>{title}</h2>}\n\n            <ul className={styles.statList}>\n                {stats.map(({id, label, percentage}) => (\n                    <li className={styles.item} style={{backgroundColor: randomColor()}} key={id}>\n                    <span className={styles.label}>{label}</span>\n                    <span className={styles.percentage}>{percentage}%</span>\n                </li>\n                ))}\n\n            </ul>\n        </section>\n    );\n};\n\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            label: PropTypes.string,\n            percentage:PropTypes.number\n        })\n    )\n}\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\n\nfunction FriendListItem({avatar, name, isOnline}) {\n    return (\n        <>\n            <span className={isOnline ? styles.isOnline : styles.isOffline}></span>\n            <img className={styles.avatar} src={avatar} alt=\"Фото\" width=\"48\" />\n            <p className={styles.name}>{name}</p>\n        </>\n    );\n};\n\nFriendListItem.propTypes = {\n    isOnline: PropTypes.bool.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n}\n\nexport default FriendListItem;\n\n//инлайн стиль прописан\n// function FriendListItem({avatar, name, isOnline}) {\n//     return (\n//         <>\n//             <span className={styles.status}>{isOnline ? <div style={{width: \"20px\", height: \"20px\", backgroundColor: 'green', borderRadius: \"50%\"}}></div> : <div style={{width: \"20px\", height: \"20px\", backgroundColor: 'red', borderRadius: \"50%\"}}></div>}</span>\n//             <img className={styles.avatar} src={avatar} alt=\"Фото\" width=\"48\" />\n//             <p className={styles.name}>{name}</p>\n//         </>\n//     );\n// };\n\n\n","import React from 'react';\nimport FriendListItem from './FriendListItem';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\n\n\nfunction FriendList({friends}) {\n    return (\n        <ul className={styles.friends}>\n            {friends.map(friend => (<li className={styles.item} key={friend.id}>\n                 <FriendListItem {...friend}/>\n                 </li>) )\n}\n        </ul>\n    )\n}\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    }))\n}\n\nexport default FriendList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nfunction TransactionHistory({items}) {\n    return (\n        <table className={styles.transactionHistory}>\n            <thead className={styles.table}>\n                <tr>\n                    <th>Type</th>\n                    <th>Amount</th>\n                    <th>Currency</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {items.map((item) => (\n                    <tr key={item.id}>\n                    <td>{item.type}</td>\n                    <td>{item.amount}</td>\n                    <td>{item.currency}</td>\n                    </tr>)\n                )}\n            </tbody>\n        </table>\n    );\n};\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        amount: PropTypes.string.isRequired,\n        currency: PropTypes.string.isRequired,\n    }))\n};\n\n\nexport default TransactionHistory;","import React from \"react\";\nimport Profile from \"./components/Profile/Profile\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport TransactionHistory from \"./components/Transaction/TransactionHistory\";\n\nimport userInfo from \"./data/user.json\";\nimport statisticalData from \"./data/statistical-data.json\";\nimport friends from \"./data/friends.json\";\nimport transactions from \"./data/transactions.json\";\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        name={userInfo.name}\n        tag={userInfo.tag}\n        avatar={userInfo.avatar}\n        location={userInfo.location}\n        stats={userInfo.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}